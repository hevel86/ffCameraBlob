name: Build & Release EXE (PyInstaller)

on:
  push:
    tags: ["v*"]          # e.g. v1.0.0
  workflow_dispatch:       # allow manual trigger

permissions:
  contents: write          # needed to create Releases

jobs:
  build-windows:
    runs-on: windows-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Confirm script exists at repo root
        shell: pwsh
        run: |
          if (-not (Test-Path './ff_blob_checker_gui.py')) {
            Write-Error 'ff_blob_checker_gui.py not found at repo root.'
          }

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install build deps
        shell: pwsh
        run: |
          python -m pip install --upgrade pip
          if (Test-Path './requirements.txt') {
            pip install -r requirements.txt
          } else {
            pip install pyinstaller
          }

      - name: Inject version into script (version.py)
        shell: pwsh
        run: |
          $ver = '${{ github.ref_name }}' -replace '^v',''
          Set-Content -Path 'version.py' -Value "__version__ = '$ver'" -Encoding utf8

      - name: Build with PyInstaller
        shell: pwsh
        run: |
          pyinstaller --noconsole --clean --onefile --name ff_blob_checker_gui ff_blob_checker_gui.py

      - name: List dist artifacts
        shell: pwsh
        run: |
          if (Test-Path './dist') { Get-ChildItem -Recurse './dist' } else { Write-Host 'No dist directory found.' }

      - name: Rename EXE with version (if present)
        id: rename
        shell: pwsh
        run: |
          $src = 'dist/ff_blob_checker_gui.exe'
          if (Test-Path $src) {
            $ver = '${{ github.ref_name }}' -replace '^v',''
            $dst = "dist/ff_blob_checker_gui-$ver-windows-x64.exe"
            Move-Item $src $dst -Force
            echo "artifact=$dst" >> $env:GITHUB_OUTPUT
            echo "version=$ver"  >> $env:GITHUB_OUTPUT
          } else {
            Write-Host 'No EXE found to rename.'
          }

      - name: Create portable ZIP
        id: zip
        if: ${{ steps.rename.outputs.artifact }}
        shell: pwsh
        run: |
          $ver = "${{ steps.rename.outputs.version }}"
          $zip = "dist/ff_blob_checker_gui-$ver-windows-x64-portable.zip"

          # Stage folder
          New-Item -ItemType Directory -Force -Path "dist/stage" | Out-Null
          Copy-Item "${{ steps.rename.outputs.artifact }}" "dist/stage/"
          if (Test-Path "README.md") { Copy-Item "README.md" "dist/stage/" }
          if (Test-Path "LICENSE")   { Copy-Item "LICENSE"   "dist/stage/" }

          if (Test-Path $zip) { Remove-Item $zip -Force }
          Compress-Archive -Path "dist/stage/*" -DestinationPath $zip

          echo "zip=$zip" >> $env:GITHUB_OUTPUT

      - name: Upload build artifacts (always)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: dist-folder
          path: dist/

      - name: Create GitHub Release (attach EXE + ZIP)
        if: ${{ steps.rename.outputs.artifact }}
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: "ff_blob_checker_gui ${{ steps.rename.outputs.version }}"
          files: |
            ${{ steps.rename.outputs.artifact }}
            ${{ steps.zip.outputs.zip }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
